name: Build&release

on:
  push:
    paths:
      - "**/*.rs"
      - ".github/workflows/cli.yml"
  pull_request:
  workflow_dispatch:

env:
  ACTIONS_ID: ${{ github.run_id }}

permissions: write-all

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: FreeBSD-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-freebsd

          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os-name: Linux-riscv64
            runs-on: ubuntu-24.04
            target: riscv64gc-unknown-linux-gnu

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      - name: Import GPG key
        # GPG signing for release artifacts - requires GPG_PRIVATE_KEY and GPG_PASSPHRASE secrets
        uses: crazy-max/ghaction-import-gpg@master
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - shell: bash
        run: ls -laR

      - name: GPG sign release artifacts
        if: ${{ contains(runner.os, 'Windows') }}
        shell: bash
        run: |
          gpg --detach-sign "./target/${{ matrix.platform.target }}/release/my-http-server.exe"

      - name: GPG sign release artifacts
        if: ${{ !contains(runner.os, 'Windows') }}
        shell: bash
        run: |
          gpg --detach-sign "./target/${{ matrix.platform.target }}/release/my-http-server"

      - name: Publish artifacts and release
        uses: fvj/actions-rust-release@jvf/add-glob-support-to-extra-files
        id: Publish-artifacts-and-release
        with:
          executable-name: my-http-server
          target: ${{ matrix.platform.target }}
          changes-file: ""
          extra-files: |
            LICENSE.txt
            README.md
            **/*.asc
            **/*.sig
